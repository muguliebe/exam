<?xml version="1.0" encoding="UTF-8" standalone="no"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.exam.bank.repo.mybatis.TransactionMapper">

    <select id="selectListAllTransaction" resultType="FwkTransactionHst">
        select /* fwk@selectListAllTransaction@모든 거래내역 조회 */
             tr_dy as transactionDate
             , gid
             , method
             , path
             , status_code
             , start_time
             , end_time
             , elapsed
             , remote_ip
             , query_string
             , body
             , referrer
             , error_message as errMsg
             , create_user_id
             , create_dt
          from fwk_transaction_hst a /* T. 거래내역 */
         where 1 = 1
           and 2 = 2
    </select>

    <insert id="insertTransaction" parameterType="FwkTransactionHst">
        insert /* fwk@insertTransaction@거래내역 생성 */
        into fwk_transaction_hst (
        tr_dy
        , gid
        , method
        , path
        , status_code
        , start_time
        , end_time
        , elapsed
        , remote_ip
        , query_string
        , body
        , error_message
        , referrer
        , create_dt
        , create_user_id
        )
        values (
        #{transactionDate}
        , #{gid}
        , #{method}
        , #{path}
        , #{statCode}
        , #{startTime}
        , #{endTime}
        , #{elapsed}
        , #{remoteIp}
        , #{queryString}
        , #{body}::JSON
        , #{errMsg}
        , #{referrer}
        , #{createDt}
        , #{createUserId}
        )
    </insert>

    <select id="selectTrAuthStat" resultType="GetTrAuthStatOut">
        select /* act@selectAuthStat@인증단계 통계 조회 */
               to_char(a.create_dt, 'YYYY-MM') as statMm
                , sum(case when a.path in ('/acct/auth/a1', '/acct/auth/a2') and a.status_code::integer = 200
                              then 1
                              else 0
                       end) as "cntSuccessId" /* 신분증 성공 건수 */
                , sum(case when a.path in ('/acct/auth/a1', '/acct/auth/a2') and a.status_code::integer != 200
                              then 1
                              else 0
                       end) as "cntFailId" /* 신분증 실패 건수 */
                , sum(case when a.path in ('/acct/auth/b1', '/acct/auth/b2') and a.status_code::integer = 200
                               then 1
                               else 0
                      end) as "cntSuccessSend" /* 이체 성공 건수 */
                , sum(case when a.path in ('/acct/auth/b1', '/acct/auth/b2') and a.status_code::integer != 200
                               then 1
                               else 0
                       end) as "cntFailSend" /* 이체 실패 건수 */
                , sum(case
                          when a.path in ('/acct/auth/c1') and a.status_code::integer = 200
                              then 1
                              else 0
                       end) as "cntSuccessWord" /* 단어 성공 건수 */
                , sum(case
                          when a.path in ('/acct/auth/c1') and a.status_code::integer != 200
                              then 1
                              else 0
                       end) as "cntFailWord" /* 단어 실패 건수 */
             from fwk_transaction_hst a /* T. 거래내역 */
            group by to_char(a.create_dt, 'YYYY-MM')

    </select>

</mapper>
